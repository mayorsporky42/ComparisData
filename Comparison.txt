## File Comparison Script ##
# When comparing files, export the files as .txt files #
# When inputing the files, it is CASE SENSITIVE #

# The output will be in the format of ">" for any files in the first document and "<" for any files in the second document #
# The files should be sorted within the program so that the contents of the files match up by line #


fname1 = input("First File: ")
fname2 = input("Second File: ")

f1 = open(fname1)
f2 = open(fname2)


print("-----------------------------------------")
print("Comparing files: ", " > " + fname1, " < " + fname2, sep='\n')
print("-----------------------------------------")

f1_line = f1.readline()
f2_line = f2.readline()

line_no = 1

#===========================================================#

class NameSort():
    def __init__(self, infile):
        file = open(infile)
        master = file.read()
        self.M = master
        self.count = 0
        self.D = {}

    def __repr__(self):
        return self.M

    def maker(self):
        x = " "
        z = 0
        # self.M=self.M.lower()
        self.M = self.M.split()
        done = False
        while not done:

            print(self.M[z + 1])
            self.D.update({self.M[z]: self.M[z + 1]})
            z += 1
            if z == self.count:
                self.D.update({self.M[z]: self.M[z + 1]})
                done = True
            else:
                done = False

    def lines(self):
        self.count = self.M.count("\n")
        # self.Q=self.Q.replace("\n","@@")
        return self.count + 2

    def book(self):
        for keys, values in self.D.items():
            print(keys)
            print(values)

    def re(self):
        return self.D


#===========================================================#



while f1_line != '' or f2_line != '':
    f1_line = f1_line.rstrip()
    f2_line = f2_line.rstrip()

    if f1_line != f2_line:
        if f2_line == '' and f1_line != '':
            print(">+", "Line-%d" % line_no, f1_line)
        elif f1_line != '':
            print(">", "Line-%d" % line_no, f1_line)
        if f1_line == '' and f2_line != '':
            print("<+", "Line-%d" % line_no, f2_line)
        elif f2_line != '':
            print("<", "Line-%d" % line_no, f2_line)

        print()


    f1_line = f1.readline()
    f2_line = f2.readline()

    line_no += 1


f1.close()
f2.close()
